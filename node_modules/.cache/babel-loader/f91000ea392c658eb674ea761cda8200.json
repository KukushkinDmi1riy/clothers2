{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBj56nTjteeofJSeQTS83BrI5EPCLCkj9E\",\n  authDomain: \"crwn-clothing-602da.firebaseapp.com\",\n  projectId: \"crwn-clothing-602da\",\n  storageBucket: \"crwn-clothing-602da.appspot.com\",\n  messagingSenderId: \"745362219552\",\n  appId: \"1:745362219552:web:534f2b5180c47a7f021245\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config); // export const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\n//   const collectionRef = firestore.collection(collectionKey);\n//   const batch = firestore.batch()\n//   objectToAdd.forEach(obj => {\n//     const newDocRef = collectionRef.doc()\n//     batch.set(newDocRef, obj)\n//   });\n//   return await batch.commit();\n// };\n\nexport const convertCollectionsSnapshotToMap = collectionsSnapchat => {\n  const transformCollection = collectionsSnapchat.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["D:/React_by_ZTM/e-com/new2/shops/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","convertCollectionsSnapshotToMap","collectionsSnapchat","transformCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","collection","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBj56nTjteeofJSeQTS83BrI5EPCLCkj9E\",\r\n    authDomain: \"crwn-clothing-602da.firebaseapp.com\",\r\n    projectId: \"crwn-clothing-602da\",\r\n    storageBucket: \"crwn-clothing-602da.appspot.com\",\r\n    messagingSenderId: \"745362219552\",\r\n    appId: \"1:745362219552:web:534f2b5180c47a7f021245\"\r\n  };\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData ) => {\r\n  if(!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n  \r\n  const snapShot = await userRef.get()\r\n\r\n  if(!snapShot.exists) {\r\n    const { displayName, email} = userAuth;\r\n    const createdAt = new Date();\r\n\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      })\r\n\r\n    } catch (error) {\r\n        console.log('error creating user', error.message);\r\n    }\r\n   }\r\n\r\n   return userRef;\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\n// export const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\r\n//   const collectionRef = firestore.collection(collectionKey);\r\n\r\n//   const batch = firestore.batch()\r\n//   objectToAdd.forEach(obj => {\r\n//     const newDocRef = collectionRef.doc()\r\n//     batch.set(newDocRef, obj)\r\n//   });\r\n\r\n//   return await batch.commit();\r\n// };\r\n\r\nexport const convertCollectionsSnapshotToMap = (collectionsSnapchat) => {\r\n  const transformCollection = collectionsSnapchat.docs.map(doc => {\r\n    const {title, items} = doc.data();\r\n\r\n    return {\r\n      routeName: encodeURI(title.toLowerCase()),\r\n      id: doc.id,\r\n      title,\r\n      items\r\n    }\r\n  });\r\n\r\n  return transformCollection.reduce((accumulator, collection) => {\r\n    accumulator[collection.title.toLowerCase()] = collection;\r\n    return accumulator;\r\n  }, {})\r\n}\r\n\r\nexport const getCurrentUser = () => {\r\n  return new Promise ((resolve, reject) => {\r\n    const unsubscribe = auth.onAuthStateChanged(userAuth=> {\r\n      unsubscribe();\r\n      resolve(userAuth);\r\n    }, reject);\r\n  })\r\n}\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider()\r\ngoogleProvider.setCustomParameters({prompt:'select_account'});\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}