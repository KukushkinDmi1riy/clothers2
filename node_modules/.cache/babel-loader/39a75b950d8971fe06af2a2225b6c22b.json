{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInFailure, signInSuccess, emailSignInFailure, emailSignInSuccess } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["D:/React_by_ZTM/e-com/new2/shops/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","signInFailure","signInSuccess","emailSignInFailure","emailSignInSuccess","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","googleSignInSuccess","id","data","error","googleSignInFailure","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA0C,oBAA1C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,kBAAvC,EAA2DC,kBAA3D,QAAoF,gBAApF;AAGA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAArB;AACA,UAAMK,OAAO,GAAG,MAAMb,IAAI,CAACS,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACiB,mBAAmB,CAAC;AAC1BC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EADS;AAE1B,SAAGH,YAAY,CAACI,IAAb;AAFuB,KAAD,CAApB,CAAT;AAIH,GARD,CASA,OAAMC,KAAN,EAAa;AACT,UAAMpB,GAAG,CAACqB,mBAAmB,CAACD,KAAD,CAApB,CAAT;AAEH;AACJ;AAED,OAAO,UAAUE,mBAAV,GAAgC;AACnC,QAAMvB,UAAU,CAACI,eAAe,CAACoB,oBAAjB,EAAuCZ,gBAAvC,CAAhB;AACH;AAGD,OAAO,UAAUa,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAE3D,MAAG;AACC,UAAM;AAACf,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMb,OAAO,GAAG,MAAMb,IAAI,CAACS,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACO,kBAAkB,CAAC;AACzBW,MAAAA,EAAE,EAAEH,YAAY,CAACG,EADQ;AAEzB,SAAGH,YAAY,CAACI,IAAb;AAFsB,KAAD,CAAnB,CAAT;AAIH,GARD,CASA,OAAMC,KAAN,EAAa;AACT,UAAMpB,GAAG,CAACM,kBAAkB,CAACc,KAAD,CAAnB,CAAT;AACH;AAKJ;AAED,OAAO,UAAUS,kBAAV,GAA+B;AAClC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAsCN,eAAtC,CAAhB;AACH;AAGD,OAAO,UAAUO,QAAV,GAAqB;AACxB,QAAM7B,GAAG,CAAC,CAACD,IAAI,CAACqB,mBAAD,CAAL,EAA4BrB,IAAI,CAAC4B,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, call, all} from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { signInFailure, signInSuccess, emailSignInFailure, emailSignInSuccess} from './user.actions'\r\n\r\n\r\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\nexport function* signInWithGoogle() {\r\n    try { \r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(googleSignInSuccess({\r\n            id: userSnapshot.id,\r\n            ...userSnapshot.data()\r\n        }))\r\n    }\r\n    catch(error) {\r\n        yield put(googleSignInFailure(error))\r\n\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\n\r\nexport function* signInWithEmail({payload: {email, password}}) {\r\n\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(emailSignInSuccess({\r\n            id: userSnapshot.id,\r\n            ...userSnapshot.data()\r\n        }))\r\n    }\r\n    catch(error) {\r\n        yield put(emailSignInFailure(error))\r\n    }\r\n\r\n    \r\n\r\n\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\n\r\nexport function* userSaga() {\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\r\n}"]},"metadata":{},"sourceType":"module"}