{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React_by_ZTM\\\\e-com\\\\new2\\\\shops\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createSructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createSructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["D:/React_by_ZTM/e-com/new2/shops/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createSructuredSelector","selectIsCollectionFetching","updateCollections","CollectionsOverview","CollectionPage","fetchCollectionsStartAsync","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","render","match","props","loading","state","path","mapStateToProps","isCollectionFetching","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,uBAAR,QAAsC,UAAtC;AACA,SAASC,0BAAT,QAA0C,iCAA1C;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,0BAAR,QAAyC,+BAAzC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACH,mBAAD,CAAjD;KAAMI,6B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACF,cAAD,CAA7C;MAAMI,yB;;AAEN,MAAMC,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG,CAEnB;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKC,KAArB;AACA,UAAM;AAACC,MAAAA;AAAD,QAAY,KAAKC,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEH,KAAK,CAACI,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGH,KAAD,iBAAU,QAAC,6BAAD;AAA+B,UAAA,SAAS,EAAEC,OAA1C;AAAA,aAAuDD;AAAvD;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAED,KAAK,CAACI,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAGH,KAAD,iBAAU,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEC,OAAtC;AAAA,aAAmDD;AAAnD;AAAA;AAAA;AAAA;AAAA;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAdoC;;AAiBvC,MAAMI,eAAe,GAAGlB,uBAAuB,CAAC;AAChDmB,EAAAA,oBAAoB,EAAElB;AAD0B,CAAD,CAA/C;;AAIA,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACtChB,EAAAA,0BAA0B,EAAE,MAAKgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADH,CAAL,CAAnC;;AAIA,eAAeN,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\n\r\nimport {createSructuredSelector} from 'reselect'\r\nimport { selectIsCollectionFetching} from '../../redux/shop/shop.selectors'\r\nimport {updateCollections} from '../../redux/shop/shop.actions'\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions'\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n  componentDidMount() {\r\n    \r\n  }\r\n    \r\n  render() {\r\n    const {match} = this.props\r\n    const {loading} = this.state\r\n    return (\r\n      <div className='shop-page'>\r\n      <Route exact path={`${match.path}`} render={(props)=> <CollectionOverviewWithSpinner isLoading={loading} {...props}/>} />\r\n      <Route path={`${match.path}/:collectionId`} render={(props)=> <CollectionPageWithSpinner isLoading={loading} {...props}/>} />\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createSructuredSelector({\r\nisCollectionFetching: selectIsCollectionFetching\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollectionsStartAsync: ()=> dispatch(fetchCollectionsStartAsync())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n\r\n"]},"metadata":{},"sourceType":"module"}