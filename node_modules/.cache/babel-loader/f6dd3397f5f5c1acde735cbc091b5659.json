{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport function* fetchCollectionsAsync() {// const collectionRef = firestore.collection('collections');\n  //     dispatch(fetchCollectionsStart());\n  //     collectionRef.get().then(snapshot => {\n  //         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //         dispatch(fetchCollectionsSuccess(collectionsMap))\n  //         this.setState({loading: false})\n  //     }).catch(error=>dispatch(fetchCollectionsFailure(error.message)))\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["D:/React_by_ZTM/e-com/new2/shops/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","firestore","convertCollectionsSnapshotToMap","fetchCollectionsAsync","fetchCollectionsStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,UAAUC,qBAAV,GAAkC,CAErC;AACA;AAEA;AACA;AACA;AACA;AACA;AAEH;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMT,SAAS,CACXG,eAAe,CAACO,sBADL,EAEXF,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\r\nimport ShopActionTypes from './shop.types';\r\n\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions'\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils' \r\n\r\nexport function* fetchCollectionsAsync() {\r\n    \r\n    // const collectionRef = firestore.collection('collections');\r\n    //     dispatch(fetchCollectionsStart());\r\n        \r\n    //     collectionRef.get().then(snapshot => {\r\n    //         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //         dispatch(fetchCollectionsSuccess(collectionsMap))\r\n    //         this.setState({loading: false})\r\n    //     }).catch(error=>dispatch(fetchCollectionsFailure(error.message)))\r\n\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTION_START, \r\n        fetchCollectionsAsync \r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}