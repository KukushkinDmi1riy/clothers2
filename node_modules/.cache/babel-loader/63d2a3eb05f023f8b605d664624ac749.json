{"ast":null,"code":"import { takeLatest, put, call, all, take } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInFailure, signInSuccess, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\n\nfunction* getSnapsotFromUserAuth(user, add) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapsotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapsotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapsotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SING_OUT_START, signOut);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["D:/React_by_ZTM/e-com/new2/shops/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","take","UserActionTypes","signInFailure","signInSuccess","signOutSuccess","signOutFailure","signUpFailure","signUpSuccess","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapsotFromUserAuth","user","add","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","userAuth","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignOutStart","SING_OUT_START","signUp","displayName","createUserWithEmailAndPassword","additionalData","signInAfterSignUp","onSignUpSuccess","SIGN_UP_SUCCESS","onSignUpStart","SIGN_UP_START","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, all, take} from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { signInFailure, signInSuccess, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from './user.actions'\r\n\r\n\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\r\n\r\nfunction* getSnapsotFromUserAuth(user, add) {\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(signInSuccess({\r\n            id: userSnapshot.id,\r\n            ...userSnapshot.data()\r\n        }))\r\n    } catch(error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try { \r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapsotFromUserAuth(user)\r\n    }\r\n    catch(error) {\r\n        yield put(signInFailure(error))\r\n\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\n\r\nexport function* signInWithEmail({payload: {email, password}}) {\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapsotFromUserAuth(user)\r\n    }\r\n    catch(error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if (!userAuth) return;\r\n        yield getSnapsotFromUserAuth(userAuth)\r\n    } catch(error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\n\r\nexport function* signOut() {\r\n    try{\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess())\r\n    }\r\n    catch(error)\r\n {\r\n     yield put(signOutFailure(error))\r\n }}\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(UserActionTypes.SING_OUT_START, signOut)\r\n}\r\n\r\n\r\nexport function* signUp({payload: {email, password, displayName}}) {\r\n    try {\r\n        const {user} = yield auth.createUserWithEmailAndPassword(email, password);\r\n        yield put(signUpSuccess({user, additionalData: {displayName} }))\r\n    } catch (error) {\r\n        yield put(signUpFailure(error))\r\n    }\r\n\r\n}\r\n\r\nexport function* signInAfterSignUp({payload: {user, additionalData}}) {\r\n\r\n}\r\n\r\nexport function* onSignUpSuccess() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\r\n}\r\n\r\nexport function* userSaga() {\r\n    yield all([\r\n        call(onGoogleSignInStart), \r\n        call(onEmailSignInStart), \r\n        call(onCheckUserSession),\r\n        call(onSignOutStart)\r\n    ])\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}