{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React_by_ZTM\\\\e-com\\\\new2\\\\shops\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions'; // import './sign-in.styles.scss'\n\nconst SignIn = ({\n  googleSignInStart,\n  emailSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredetials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredetials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        handleChange: handleChange,\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        handleChange: handleChange,\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \" SIGN IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \" SIGN IN with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignIn, \"rg8TvWe0D932uR/3oy0cXBq0DiU=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["D:/React_by_ZTM/e-com/new2/shops/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","SignInContainer","SignInTitle","ButtonsBarContainer","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredetials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAGA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,mBAAvC,QAAiE,kBAAjE;AAEA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,+BAApD,C,CAEA;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACF,EAAAA,iBAAD;AAAoBC,EAAAA;AAApB,CAAD,KAA4C;AAAA;;AAEvD,QAAM,CAACE,eAAD,EAAkBC,aAAlB,IAAmCX,QAAQ,CAAC;AAACY,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE;AAAtB,GAAD,CAAjD;AAEA,QAAM;AAACD,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBH,eAA1B;;AAED,QAAMI,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACAR,IAAAA,gBAAgB,CAACI,KAAD,EAAQC,QAAR,CAAhB;AACH,GAHF;;AAKC,QAAMI,YAAY,GAAIF,KAAD,IAAW;AAC5B,UAAM;AAACG,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAgBJ,KAAK,CAACK,MAA5B;AACAT,IAAAA,aAAa,CAAC,EAAC,GAAGD,eAAJ;AAAqB,OAACS,IAAD,GAAQD;AAA7B,KAAD,CAAb;AACH,GAHD;;AAKI,sBACI,QAAC,eAAD;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAIQ;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,YAAY,EAAEG,YADlB;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,KAAK,EAAEL,KAJX;AAKI,QAAA,KAAK,EAAC,OALV;AAMI,QAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,SAAD;AACI,QAAA,YAAY,EAAEK,YADlB;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,KAAK,EAAEJ,QAJX;AAKI,QAAA,KAAK,EAAC,UALV;AAMI,QAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,cATJ,eAiBQ,QAAC,mBAAD;AAAA,gCACA,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAIN,iBAAvC;AAA0D,UAAA,cAAc,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBR;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAhDL;;GAAME,M;;KAAAA,M;;AAkDN,MAAMY,kBAAkB,GAAIC,QAAD,KAAc;AACrCf,EAAAA,iBAAiB,EAAE,MAAKe,QAAQ,CAACf,iBAAiB,EAAlB,CADK;AAErCC,EAAAA,gBAAgB,EAAE,CAACI,KAAD,EAAQC,QAAR,KAAmBS,QAAQ,CAACd,gBAAgB,CAAC;AAACI,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,CAAjB;AAFR,CAAd,CAA3B;;AAKA,eAAeZ,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\n\r\nimport { SignInContainer, SignInTitle, ButtonsBarContainer} from './sign-in.styles'\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions'\r\n\r\n// import './sign-in.styles.scss'\r\n\r\nconst SignIn = ({googleSignInStart, emailSignInStart}) =>  {\r\n\r\n    const [userCredentials, setCredetials] = useState({email: '', password: ''})\r\n\r\n    const {email, password} = userCredentials\r\n   \r\n   const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        emailSignInStart(email, password)\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const {value, name} = event.target;\r\n        setCredetials({...userCredentials, [name]: value})\r\n    }\r\n\r\n        return (\r\n            <SignInContainer>\r\n                <SignInTitle>I already have an account</SignInTitle>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n                        <FormInput \r\n                            handleChange={handleChange}\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            value={email} \r\n                            label=\"email\"\r\n                            required />\r\n                        \r\n                        <FormInput \r\n                            handleChange={handleChange}\r\n                            name=\"password\"\r\n                            type=\"password\" \r\n                            value={password} \r\n                            label=\"password\"\r\n                            required/>\r\n                        \r\n                            <ButtonsBarContainer>\r\n                            <CustomButton type=\"submit\"> SIGN IN</CustomButton>\r\n                            <CustomButton type=\"button\" onClick = {googleSignInStart} isGoogleSignIn> SIGN IN with Google</CustomButton>\r\n                            </ButtonsBarContainer>\r\n                          \r\n                        \r\n                    </form>\r\n\r\n            </SignInContainer>\r\n        )\r\n    }\r\n\r\nconst mapDispatchToProps = (dispatch)=> ({\r\n    googleSignInStart: ()=> dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password)=>dispatch(emailSignInStart({email, password}))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}