{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInFailure, signInSuccess } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nfunction* getSnapsotFromUserAuth(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapsotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapsotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\nexport function* onCheckUserSession() {}","map":{"version":3,"sources":["D:/React_by_ZTM/e-com/new2/shops/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","signInFailure","signInSuccess","auth","googleProvider","createUserProfileDocument","getSnapsotFromUserAuth","user","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSaga","onCheckUserSession"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA0C,oBAA1C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAGA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;;AAGA,UAAUC,sBAAV,CAAiCC,IAAjC,EAAuC;AACnC,MAAG;AACC,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACO,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAACK,aAAa,CAAC;AACpBS,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADG;AAEpB,SAAGF,YAAY,CAACG,IAAb;AAFiB,KAAD,CAAd,CAAT;AAIH,GAPD,CAOE,OAAMC,KAAN,EAAa;AACX,UAAMhB,GAAG,CAACI,aAAa,CAACY,KAAD,CAAd,CAAT;AACH;AACJ;;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAACP,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACY,eAAL,CAAqBX,cAArB,CAArB;AACA,UAAME,sBAAsB,CAACC,IAAD,CAA5B;AACH,GAHD,CAIA,OAAMM,KAAN,EAAa;AACT,UAAMhB,GAAG,CAACI,aAAa,CAACY,KAAD,CAAd,CAAT;AAEH;AACJ;AAED,OAAO,UAAUG,mBAAV,GAAgC;AACnC,QAAMpB,UAAU,CAACI,eAAe,CAACiB,oBAAjB,EAAuCH,gBAAvC,CAAhB;AACH;AAGD,OAAO,UAAUI,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAC3D,MAAG;AACC,UAAM;AAACd,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMf,sBAAsB,CAACC,IAAD,CAA5B;AACH,GAHD,CAIA,OAAMM,KAAN,EAAa;AACT,UAAMhB,GAAG,CAACI,aAAa,CAACY,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUU,kBAAV,GAA+B;AAClC,QAAM3B,UAAU,CAACI,eAAe,CAACwB,mBAAjB,EAAsCN,eAAtC,CAAhB;AACH;AAGD,OAAO,UAAUO,QAAV,GAAqB;AACxB,QAAM1B,GAAG,CAAC,CAACD,IAAI,CAACkB,mBAAD,CAAL,EAA4BlB,IAAI,CAACyB,kBAAD,CAAhC,CAAD,CAAT;AACH;AAED,OAAO,UAAUG,kBAAV,GAA+B,CAErC","sourcesContent":["import { takeLatest, put, call, all} from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { signInFailure, signInSuccess } from './user.actions'\r\n\r\n\r\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\n\r\nfunction* getSnapsotFromUserAuth(user) {\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(signInSuccess({\r\n            id: userSnapshot.id,\r\n            ...userSnapshot.data()\r\n        }))\r\n    } catch(error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try { \r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapsotFromUserAuth(user)\r\n    }\r\n    catch(error) {\r\n        yield put(signInFailure(error))\r\n\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\n\r\nexport function* signInWithEmail({payload: {email, password}}) {\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapsotFromUserAuth(user)\r\n    }\r\n    catch(error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\n\r\nexport function* userSaga() {\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}