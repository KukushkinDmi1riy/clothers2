{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\React_by_ZTM\\\\e-com\\\\new2\\\\shops\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions'; // import './sign-in.styles.scss'\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const {\n        emailSignInStart\n      } = this.props;\n      emailSignInStart(email, password); // try {\n      //    await auth.signInWithEmailAndPassword(email, password);\n      //    this.setState({email: '', password: ''})\n      // }\n      // catch (error) {\n      //     console.log(error)\n      // }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(SignInContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          handleChange: this.handleChange,\n          name: \"email\",\n          type: \"email\",\n          value: this.state.email,\n          label: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          handleChange: this.handleChange,\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          label: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \" SIGN IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \" SIGN IN with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["D:/React_by_ZTM/e-com/new2/shops/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","SignInContainer","SignInTitle","ButtonsBarContainer","googleSignInStart","emailSignInStart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { SignInContainer, SignInTitle, ButtonsBarContainer} from './sign-in.styles'\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions'\r\n\r\n// import './sign-in.styles.scss'\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            email:'',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        const { email, password} = this.state;\r\n        const {emailSignInStart} = this.props;\r\n\r\n        emailSignInStart(email, password)\r\n\r\n        // try {\r\n        //    await auth.signInWithEmailAndPassword(email, password);\r\n        //    this.setState({email: '', password: ''})\r\n        // }\r\n        // catch (error) {\r\n        //     console.log(error)\r\n        // }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const {value, name} = event.target;\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    render() {\r\n        const {googleSignInStart} = this.props\r\n        return (\r\n            <SignInContainer>\r\n                <SignInTitle>I already have an account</SignInTitle>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <FormInput \r\n                            handleChange={this.handleChange}\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            value={this.state.email} \r\n                            label=\"email\"\r\n                            required />\r\n                        \r\n                        <FormInput \r\n                            handleChange={this.handleChange}\r\n                            name=\"password\"\r\n                            type=\"password\" \r\n                            value={this.state.password} \r\n                            label=\"password\"\r\n                            required/>\r\n                        \r\n                            <ButtonsBarContainer>\r\n                            <CustomButton type=\"submit\"> SIGN IN</CustomButton>\r\n                            <CustomButton type=\"button\" onClick = {googleSignInStart} isGoogleSignIn> SIGN IN with Google</CustomButton>\r\n                            </ButtonsBarContainer>\r\n                          \r\n                        \r\n                    </form>\r\n\r\n            </SignInContainer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=> ({\r\n    googleSignInStart: ()=> dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password)=>dispatch(emailSignInStart({email, password}))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}