{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleSignInFailure, googleSignInSuccess, emailSignInFailure, emaileSignInSuccess } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  email,\n  password\n}) {\n  const {\n    user\n  } = yield auth.signInWithEmailAndPassword(email, password);\n}\nexport function* onEmailstart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["D:/React_by_ZTM/e-com/new2/shops/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","googleSignInFailure","googleSignInSuccess","emailSignInFailure","emaileSignInSuccess","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","email","password","signInWithEmailAndPassword","onEmailstart","EMAIL_SIGN_IN_START","userSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA0C,oBAA1C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,mBAAvE,QAAiG,gBAAjG;AAGA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAArB;AACA,UAAMK,OAAO,GAAG,MAAMb,IAAI,CAACS,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACK,mBAAmB,CAAC;AAC1BY,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADS;AAE1B,SAAGF,YAAY,CAACG,IAAb;AAFuB,KAAD,CAApB,CAAT;AAIH,GARD,CASA,OAAMC,KAAN,EAAa;AACT,UAAMnB,GAAG,CAACI,mBAAmB,CAACe,KAAD,CAApB,CAAT;AAEH;AACJ;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMrB,UAAU,CAACI,eAAe,CAACkB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACH;AAGD,OAAO,UAAUW,eAAV,CAA0B;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAA1B,EAA6C;AAEhD,QAAM;AAACZ,IAAAA;AAAD,MAAS,MAAMJ,IAAI,CAACiB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AAGH;AAED,OAAO,UAAUE,YAAV,GAAyB;AAC5B,QAAM3B,UAAU,CAACI,eAAe,CAACwB,mBAAjB,EAAsCL,eAAtC,CAAhB;AACH;AAGD,OAAO,UAAUM,QAAV,GAAqB;AACxB,QAAM1B,GAAG,CAAC,CAACD,IAAI,CAACmB,mBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, call, all} from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { googleSignInFailure, googleSignInSuccess, emailSignInFailure, emaileSignInSuccess} from './user.actions'\r\n\r\n\r\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\nexport function* signInWithGoogle() {\r\n    try { \r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(googleSignInSuccess({\r\n            id: userSnapshot.id,\r\n            ...userSnapshot.data()\r\n        }))\r\n    }\r\n    catch(error) {\r\n        yield put(googleSignInFailure(error))\r\n\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\n\r\nexport function* signInWithEmail({email, password}) {\r\n\r\n    const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n    \r\n\r\n}\r\n\r\nexport function* onEmailstart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\n\r\nexport function* userSaga() {\r\n    yield all([call(onGoogleSignInStart)])\r\n}"]},"metadata":{},"sourceType":"module"}