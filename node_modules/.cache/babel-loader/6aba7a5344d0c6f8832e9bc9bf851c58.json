{"ast":null,"code":"import { takeLatest, put, call, all, take } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInFailure, signInSuccess, signOutSuccess, signOutFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\n\nfunction* getSnapsotFromUserAuth(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapsotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapsotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapsotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SING_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest();\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["D:/React_by_ZTM/e-com/new2/shops/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","take","UserActionTypes","signInFailure","signInSuccess","signOutSuccess","signOutFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapsotFromUserAuth","user","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","userAuth","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignOutStart","SING_OUT_START","onSignUpStart","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, all, take} from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { signInFailure, signInSuccess, signOutSuccess, signOutFailure } from './user.actions'\r\n\r\n\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\r\n\r\nfunction* getSnapsotFromUserAuth(user) {\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(signInSuccess({\r\n            id: userSnapshot.id,\r\n            ...userSnapshot.data()\r\n        }))\r\n    } catch(error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try { \r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapsotFromUserAuth(user)\r\n    }\r\n    catch(error) {\r\n        yield put(signInFailure(error))\r\n\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\n\r\nexport function* signInWithEmail({payload: {email, password}}) {\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapsotFromUserAuth(user)\r\n    }\r\n    catch(error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if (!userAuth) return;\r\n        yield getSnapsotFromUserAuth(userAuth)\r\n    } catch(error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\n\r\nexport function* signOut() {\r\n    try{\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess())\r\n    }\r\n    catch(error)\r\n {\r\n     yield put(signOutFailure(error))\r\n }}\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(UserActionTypes.SING_OUT_START, signOut)\r\n}\r\n\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest()\r\n}\r\n\r\nexport function* userSaga() {\r\n    yield all([\r\n        call(onGoogleSignInStart), \r\n        call(onEmailSignInStart), \r\n        call(onCheckUserSession),\r\n        call(onSignOutStart)\r\n    ])\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}