{"ast":null,"code":"import { takeEvery, call, put, all } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = yield firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([]);\n}","map":{"version":3,"sources":["D:/React_by_ZTM/e-com/new2/shops/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","all","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","firestore","convertCollectionsSnapshotToMap","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionMap","error","message","fetchCollectionsStart","FETCH_COLLECTION_START","shopSagas"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,QAA0C,oBAA1C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AAErC,MAAI;AACA,UAAMC,aAAa,GAAG,MAAMH,SAAS,CAACI,UAAV,CAAqB,aAArB,CAA5B;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMb,IAAI,CAACO,+BAAD,EAAkCI,QAAlC,CAAhC;AACA,UAAMV,GAAG,CAACG,uBAAuB,CAACS,aAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAMC,KAAN,EAAa;AACX,UAAMb,GAAG,CAACI,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMjB,SAAS,CACXI,eAAe,CAACc,sBADL,EAEXT,qBAFW,CAAf;AAIH;AAED,OAAO,UAAUU,SAAV,GAAqB;AACxB,QAAMhB,GAAG,CAAC,EAAD,CAAT;AACH","sourcesContent":["import { takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport ShopActionTypes from './shop.types';\r\n\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions'\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils' \r\n\r\nexport function* fetchCollectionsAsync() {\r\n    \r\n    try {\r\n        const collectionRef = yield firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n        yield put(fetchCollectionsSuccess(collectionMap));\r\n    } catch(error) {\r\n        yield put(fetchCollectionsFailure(error.message))\r\n    }\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTION_START, \r\n        fetchCollectionsAsync \r\n    );\r\n}\r\n\r\nexport function* shopSagas(){\r\n    yield all([])\r\n}"]},"metadata":{},"sourceType":"module"}